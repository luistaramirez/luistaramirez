think(10)

global a,b,d,leaf
a = 0
b = 1
d = 0
leaf = 0

def turn_right():
    turn_left()
    turn_left()
    turn_left()

def take_leaf():
    while object_here():
        take()

def initial():
    global a,d
    while front_is_clear():
        a += 1
        move()
        take_leaf()
    turn_left()

    while front_is_clear():
        move()
        take_leaf()
        d += 1
    turn_left()

def left():
    c = 0
    while c < a:
        if front_is_clear():
            take_leaf()
            move()
            c += 1
        else:
            turn_right()
            take_leaf()
            move()
            turn_left()
            move()
            move()
            turn_left()
            move()
            turn_right()
            c += 2
    turn_right()
    take_leaf()
    move()
    turn_right()
    
def right():
    c = 0
    while c < a:
        if not front_is_clear() and d > 2:
            turn_right()
            take_leaf()
            move()
            turn_left()
            move()
            move()
            turn_left()
            move()
            turn_right()
            c += 2
        elif not front_is_clear() and d <= 2 and carries_object() == 0:
            turn_left()
            move()
            turn_right()
            move()
            done()
        elif not front_is_clear() and d <= 2 and carries_object() != 0:
            while carries_object() != 0:
                toss()
        else:
            take_leaf()
            move()
            c += 1            
    turn_left()
    take_leaf()
    if not wall_in_front():
        move()
    turn_left()

    
initial()      
while True:
    if d < 2 and wall_in_front():
        toss()
    else:
        right()
        d -= 1
        left()
        d -= 1
